name: Terraform Provider Pipeline

on: workflow_call


jobs:
  test:
    name: Run Provider setup and tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform latest
        uses: hashicorp/setup-terraform@v2

      - name: Setup test broker
        run: |
          mkdir -p $HOME/solace; chmod 777 $HOME/solace
          docker run -d -p 8080:8080 -p 55555:55555 --shm-size=1g --env username_admin_globalaccesslevel=admin --env username_admin_password=admin --name=solace \
            --mount type=bind,source=$HOME/solace,destination=/var/lib/solace,ro=false solace/solace-pubsub-standard
          while ! curl -s localhost:8080 | grep aurelia ; do sleep 1 ; done

      - name: Use local provider
        run: |
          echo "
          provider_installation {
            dev_overrides {
              \"registry.terraform.io/solaceproducts/solacebroker\" = \"${HOME}/go/bin\"
            }
            direct {}
          }" > ~/.terraformrc

      - name: Checkout generator
        uses: actions/checkout@v3
        with:
          repository: SolaceDev/broker-terraform-provider-generator
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: broker-terraform-provider-generator
          ref: "v0.1.0"

      - name: Build and install generator
        run: |
          pushd broker-terraform-provider-generator
          go mod tidy
          go install .
          ls ~/go/bin
          popd

      - name: Generate provider code
        run: |
          SWAGGER_SPEC_NAME=`ls ci/swagger_spec`
          echo "Generating code using spec $SWAGGER_SPEC_NAME"
          BASE=`pwd`
          pushd internal/broker/generated
          rm ./*
          SEMP_V2_SWAGGER_CONFIG_EXTENDED_JSON="$BASE/ci/swagger_spec/$SWAGGER_SPEC_NAME" ~/go/bin/broker-terraform-provider-generator all
          popd

      - name: Build provider
        run: |
          go mod tidy
          go install .
          ls ~/go/bin

      - name: Check provider available
        run: |
          pushd ci/broker_vpn_q
          terraform plan
          popd
          

      - name: Test provider on test broker
        run: |
          pushd ci/broker_vpn_q
          # Create
          terraform plan
          terraform apply -auto-approve
          sleep 1
          # Modify
          cat ../broker_vpn_q2/testconfig2.tf >> testconfig.tf
          terraform plan
          terraform apply -auto-approve
          sleep 1
          # Delete
          terraform destroy -auto-approve
          sleep 1
          # import
          terraform apply -auto-approve
          sleep 1
          rm terraform.tfstate*
          terraform import solacebroker_msg_vpn.newone new
          popd

      # - name: Check changed files
      #   uses: tj-actions/verify-changed-files@v14
      #   id: check-changed-files
      #   with:
      #     files: |
      #       internal/broker/generated

      # - name: Run step only when any of the above files change.
      #   if: steps.check-changed-files.outputs.files_changed == 'true'
      #   run: |
      #     echo "Changed files: ${{ steps.check-changed-files.outputs.changed_files }}"

      # - name: Commit back any updated source code
      #   if: steps.check-changed-files.outputs.files_changed == 'true'
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     committer_name: GitHub Actions
      #     committer_email: actions@github.com
      #     message: 'Updating generated source [skip ci]'
      #     add: 'internal/broker/generated/*.go'
      #     new_branch: GeneratedSourceUpdates-${{ github.ref_name }}

      # - name: Create pull request
      #   if: steps.check-changed-files.outputs.files_changed == 'true'
      #   run: |
      #     CURRENT_BRANCH=${GITHUB_REF_NAME}
      #     gh pr create -B ${CURRENT_BRANCH} -H "GeneratedSourceUpdates-${CURRENT_BRANCH}" --title "Merge generated source updates into ${CURRENT_BRANCH}" --body 'Created by Github action'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
